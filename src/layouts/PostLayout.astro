---
import BaseLayout from './BaseLayout.astro';
import type { CollectionEntry } from 'astro:content';
import { getPostNavigation, formatDate, calculateReadingTime } from '../utils/blog';

export interface Props {
  post: CollectionEntry<'posts'>;
}

const { post } = Astro.props;
const { title, date, categories, tags, excerpt, author } = post.data;

// Format date
const formattedDate = formatDate(date);

// Reading time estimation
const { Content } = await post.render();
const wordCount = post.body.split(/\s+/g).length;
const readingTime = calculateReadingTime(post.body);

// Get navigation
const navigation = await getPostNavigation(post.slug);
---

<BaseLayout title={title} description={excerpt}>
  <article class="max-w-4xl mx-auto px-4 py-8">
    <header class="mb-16 pb-8 border-b border-slate-200 dark:border-slate-800">
      <h1 class="text-4xl lg:text-5xl font-bold tracking-tight text-slate-900 dark:text-slate-100 leading-tight mb-8">
        {title}
      </h1>
      
      <div class="flex flex-wrap items-center gap-6 text-sm text-slate-600 dark:text-slate-400 mb-6">
        <div class="flex items-center gap-2">
          <svg class="w-4 h-4 text-slate-400 dark:text-slate-500" fill="currentColor" viewBox="0 0 24 24">
            <path d="M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z"/>
          </svg>
          <time datetime={date.toISOString()}>{formattedDate}</time>
        </div>
        
        {author && (
          <div class="flex items-center gap-2">
            <svg class="w-4 h-4 text-slate-400 dark:text-slate-500" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"/>
            </svg>
            <span>{author}</span>
          </div>
        )}
        
        <div class="flex items-center gap-2">
          <svg class="w-4 h-4 text-slate-400 dark:text-slate-500" fill="currentColor" viewBox="0 0 24 24">
            <path d="M12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22C6.47,22 2,17.5 2,12A10,10 0 0,1 12,2M12.5,7V12.25L17,14.92L16.25,16.15L11,13V7H12.5Z"/>
          </svg>
          <span>{readingTime} min read</span>
        </div>
        
        <div class="flex items-center gap-2">
          <svg class="w-4 h-4 text-slate-400 dark:text-slate-500" fill="currentColor" viewBox="0 0 24 24">
            <path d="M14,17H7V15H14M17,13H7V11H17M17,9H7V7H17M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3Z"/>
          </svg>
          <span>{wordCount} words</span>
        </div>
      </div>
      
      {categories && categories.length > 0 && (
        <div class="flex flex-wrap items-center gap-3">
          <span class="text-sm font-medium text-slate-700 dark:text-slate-300">Filed under:</span>
          {categories.map((category) => (
            <a 
              href={`/categories/${category.toLowerCase().replace(/\s+/g, '-')}`}
              class="inline-flex items-center px-3 py-1.5 rounded-full text-sm font-medium bg-blue-50 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 hover:bg-blue-100 dark:hover:bg-blue-900/50 transition-colors border border-blue-200 dark:border-blue-800"
            >
              {category}
            </a>
          ))}
        </div>
      )}
    </header>
    
    <div class="prose prose-lg max-w-none dark:prose-invert
                prose-slate 
                prose-h1:text-3xl prose-h1:font-bold prose-h1:tracking-tight prose-h1:text-slate-900 dark:prose-h1:text-slate-100 prose-h1:scroll-mt-20
                prose-h2:text-2xl prose-h2:font-semibold prose-h2:tracking-tight prose-h2:text-slate-900 dark:prose-h2:text-slate-100 prose-h2:mt-12 prose-h2:mb-6 prose-h2:scroll-mt-20 prose-h2:border-b prose-h2:border-slate-200 dark:prose-h2:border-slate-800 prose-h2:pb-2
                prose-h3:text-xl prose-h3:font-semibold prose-h3:tracking-tight prose-h3:text-slate-900 dark:prose-h3:text-slate-100 prose-h3:mt-10 prose-h3:mb-4 prose-h3:scroll-mt-20
                prose-h4:text-lg prose-h4:font-semibold prose-h4:tracking-tight prose-h4:text-slate-900 dark:prose-h4:text-slate-100 prose-h4:mt-8 prose-h4:mb-3 prose-h4:scroll-mt-20
                prose-h5:text-base prose-h5:font-semibold prose-h5:tracking-tight prose-h5:text-slate-900 dark:prose-h5:text-slate-100 prose-h5:mt-6 prose-h5:mb-2
                prose-h6:text-base prose-h6:font-medium prose-h6:tracking-tight prose-h6:text-slate-700 dark:prose-h6:text-slate-300 prose-h6:mt-6 prose-h6:mb-2
                prose-p:text-slate-700 dark:prose-p:text-slate-300 prose-p:leading-7
                prose-a:text-blue-600 dark:prose-a:text-blue-400 prose-a:underline prose-a:decoration-blue-500/30 prose-a:underline-offset-4 hover:prose-a:decoration-blue-500/60 prose-a:transition-colors
                prose-strong:text-slate-900 dark:prose-strong:text-slate-100 prose-strong:font-semibold
                prose-em:text-slate-700 dark:prose-em:text-slate-300
                prose-code:text-slate-900 dark:prose-code:text-slate-100 prose-code:bg-slate-100 dark:prose-code:bg-slate-800 prose-code:px-1.5 prose-code:py-0.5 prose-code:rounded prose-code:text-sm prose-code:font-medium prose-code:before:content-none prose-code:after:content-none
                prose-pre:bg-slate-900 dark:prose-pre:bg-slate-950 prose-pre:text-slate-100 prose-pre:rounded-lg prose-pre:shadow-lg prose-pre:my-8 prose-pre:p-4
                prose-blockquote:border-l-4 prose-blockquote:border-l-blue-500 prose-blockquote:bg-blue-50 dark:prose-blockquote:bg-blue-950/30 prose-blockquote:text-slate-700 dark:prose-blockquote:text-slate-300 prose-blockquote:rounded-r-lg prose-blockquote:py-4 prose-blockquote:px-6 prose-blockquote:my-6 prose-blockquote:italic
                prose-ul:text-slate-700 dark:prose-ul:text-slate-300
                prose-ol:text-slate-700 dark:prose-ol:text-slate-300
                prose-li:text-slate-700 dark:prose-li:text-slate-300
                prose-table:text-slate-700 dark:prose-table:text-slate-300 prose-table:border-collapse prose-table:my-8
                prose-th:text-slate-900 dark:prose-th:text-slate-100 prose-th:bg-slate-50 dark:prose-th:bg-slate-800/50 prose-th:border prose-th:border-slate-200 dark:prose-th:border-slate-700 prose-th:px-4 prose-th:py-3 prose-th:font-semibold prose-th:text-left
                prose-td:border prose-td:border-slate-200 dark:prose-td:border-slate-700 prose-td:px-4 prose-td:py-3
                prose-hr:border-slate-200 dark:prose-hr:border-slate-800 prose-hr:my-12
                prose-img:rounded-lg prose-img:shadow-lg prose-img:my-8
                prose-figure:my-8
                prose-figcaption:text-slate-500 dark:prose-figcaption:text-slate-400 prose-figcaption:text-center prose-figcaption:mt-2 prose-figcaption:text-sm">
      <Content />
    </div>
    
    <!-- Custom styles for better content formatting -->
    <style>
      /* Fix spacing issues */
      .prose ol,
      .prose ul {
        margin-top: 1.25em;
        margin-bottom: 1.25em;
      }
      
      .prose li {
        margin-top: 0.5em;
        margin-bottom: 0.5em;
      }
      
      .prose li > p {
        margin-top: 0.75em;
        margin-bottom: 0.75em;
      }
      
      .prose p {
        margin-top: 1.25em;
        margin-bottom: 1.25em;
      }
      
      .prose pre {
        margin-top: 1.7em;
        margin-bottom: 1.7em;
      }
      
      .prose pre code {
        font-size: 0.875em;
        line-height: 1.7;
      }
      
      /* Warning/Disclaimer callout styling */
      .prose p:has(strong:first-child) {
        background: rgb(254 252 232 / 0.8);
        border-left: 4px solid rgb(251 191 36);
        padding: 12px 16px;
        border-radius: 0 8px 8px 0;
        margin: 24px 0;
      }
      
      .prose p:has(strong:first-child) strong:first-child {
        color: rgb(146 64 14);
      }
      
      :global(.dark) .prose p:has(strong:first-child) {
        background: rgb(146 64 14 / 0.2);
        border-left-color: rgb(245 158 11);
      }
      
      :global(.dark) .prose p:has(strong:first-child) strong:first-child {
        color: rgb(251 191 36);
      }
      
      /* Enhanced list styling */
      .prose ul > li::marker {
        color: rgb(148 163 184);
      }
      
      .prose ol > li::marker {
        color: rgb(148 163 184);
        font-weight: 600;
      }
      
      :global(.dark) .prose ul > li::marker,
      :global(.dark) .prose ol > li::marker {
        color: rgb(100 116 139);
      }
      
      /* External link indicators */
      .prose a[href^="http"]:not([href*="localhost"]):not([href*="larsjelle.github.io"])::after {
        content: " ↗";
        color: rgb(148 163 184);
        font-size: 0.875rem;
      }
      
      :global(.dark) .prose a[href^="http"]:not([href*="localhost"]):not([href*="larsjelle.github.io"])::after {
        color: rgb(100 116 139);
      }
      
      /* Smooth scroll behavior */
      :global(html) {
        scroll-behavior: smooth;
      }
      
      /* Table improvements */
      .prose table {
        box-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1);
        border: 1px solid rgb(226 232 240);
        border-radius: 8px;
        overflow: hidden;
      }
      
      :global(.dark) .prose table {
        border-color: rgb(51 65 85);
      }
      
      /* Code block improvements */
      .prose pre {
        background-color: rgb(15 23 42);
        border: 1px solid rgb(51 65 85);
        box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
        overflow-x: auto;
        white-space: pre;
      }
      
      .prose pre code {
        color: rgb(241 245 249);
        background-color: transparent;
        padding: 0;
        border-radius: 0;
        font-size: 0.875em;
        line-height: 1.7;
        white-space: pre;
        word-wrap: normal;
        overflow-wrap: normal;
      }
      
      /* Ensure dark mode code blocks look good */
      :global(.dark) .prose pre {
        background-color: rgb(2 6 23);
        border-color: rgb(30 41 59);
      }
      
      /* Fix any potential conflicts with inline code vs code blocks */
      .prose :not(pre) > code {
        background-color: rgb(241 245 249);
        color: rgb(15 23 42);
        padding: 0.125rem 0.375rem;
        border-radius: 0.25rem;
        font-size: 0.875em;
        font-weight: 500;
      }
      
      :global(.dark) .prose :not(pre) > code {
        background-color: rgb(51 65 85);
        color: rgb(241 245 249);
      }
    </style>
    
    {tags && tags.length > 0 && (
      <footer class="mt-16 pt-8 border-t border-slate-200 dark:border-slate-800">
        <div class="mb-8">
          <h3 class="text-lg font-semibold mb-4 text-slate-900 dark:text-slate-100">Tags</h3>
          <div class="flex flex-wrap gap-2">
            {tags.map((tag) => (
              <a 
                href={`/tags/${tag.toLowerCase().replace(/\s+/g, '-')}`}
                class="inline-flex items-center px-3 py-1.5 text-sm font-medium bg-slate-100 dark:bg-slate-800 text-slate-700 dark:text-slate-300 rounded-lg hover:bg-slate-200 dark:hover:bg-slate-700 transition-colors"
              >
                #{tag}
              </a>
            ))}
          </div>
        </div>
      </footer>
    )}
    
    <!-- Navigation between posts -->
    <nav class="mt-16 pt-8 border-t border-slate-200 dark:border-slate-800">
      <div class="grid grid-cols-1 md:grid-cols-3 gap-6 items-center">
        <div class="nav-previous">
          {navigation.previous ? (
            <a 
              href={`/posts/${navigation.previous.slug}`}
              class="group flex flex-col text-left p-4 rounded-lg border border-slate-200 dark:border-slate-800 bg-white dark:bg-slate-900 hover:border-slate-300 dark:hover:border-slate-700 hover:shadow-md transition-all duration-200"
            >
              <span class="text-sm text-slate-500 dark:text-slate-400 mb-1 font-medium">← Previous</span>
              <span class="font-semibold text-slate-900 dark:text-slate-100 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors line-clamp-2">
                {navigation.previous.data.title}
              </span>
            </a>
          ) : (
            <div></div>
          )}
        </div>
        
        <div class="nav-home text-center">
          <a 
            href="/" 
            class="inline-flex items-center justify-center px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg font-semibold transition-colors duration-200 shadow-sm hover:shadow-md"
          >
            <i class="fas fa-home mr-2"></i>
            Back to Home
          </a>
        </div>
        
        <div class="nav-next">
          {navigation.next ? (
            <a 
              href={`/posts/${navigation.next.slug}`}
              class="group flex flex-col text-right p-4 rounded-lg border border-slate-200 dark:border-slate-800 bg-white dark:bg-slate-900 hover:border-slate-300 dark:hover:border-slate-700 hover:shadow-md transition-all duration-200"
            >
              <span class="text-sm text-slate-500 dark:text-slate-400 mb-1 font-medium">Next →</span>
              <span class="font-semibold text-slate-900 dark:text-slate-100 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors line-clamp-2">
                {navigation.next.data.title}
              </span>
            </a>
          ) : (
            <div></div>
          )}
        </div>
      </div>
    </nav>
  </article>
</BaseLayout>


