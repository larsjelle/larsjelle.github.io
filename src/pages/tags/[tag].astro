---
import { getCollection } from 'astro:content';
import PageLayout from '../../layouts/PageLayout.astro';

export async function getStaticPaths() {
  const posts = await getCollection('posts');
  const tags = new Set<string>();
  
  posts.forEach(post => {
    if (post.data.tags) {
      post.data.tags.forEach(tag => tags.add(tag));
    }
  });

  return Array.from(tags).map(tag => ({
    params: { tag },
    props: { tag }
  }));
}

interface Props {
  tag: string;
}

const { tag } = Astro.props;
const posts = await getCollection('posts');
const tagPosts = posts
  .filter(post => post.data.tags?.includes(tag))
  .sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime());

const breadcrumbs = [
  { label: 'Home', href: '/' },
  { label: 'Tags', href: '/tags' },
  { label: tag, href: `/tags/${tag}` }
];
---

<PageLayout 
  title={`Posts tagged with "${tag}"`}
  description={`All blog posts tagged with ${tag}`}
  breadcrumbs={breadcrumbs}
>
  <div class="space-y-8">
    <div class="text-center">
      <h1 class="text-4xl font-bold text-gray-900 dark:text-white mb-4">
        Posts tagged with "{tag}"
      </h1>
      <p class="text-xl text-gray-600 dark:text-gray-300">
        Found {tagPosts.length} post{tagPosts.length !== 1 ? 's' : ''}
      </p>
    </div>

    {tagPosts.length > 0 ? (
      <div class="space-y-8">
        {tagPosts.map((post) => (
          <article class="bg-white dark:bg-gray-800 rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 p-6">
            <div class="flex items-start justify-between mb-4">
              <div class="flex-1">
                <h2 class="text-2xl font-bold mb-2">
                  <a 
                    href={`/posts/${post.slug}`}
                    class="text-gray-900 dark:text-white hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-200"
                  >
                    {post.data.title}
                  </a>
                </h2>
                <div class="flex items-center space-x-4 text-sm text-gray-500 dark:text-gray-400 mb-3">
                  <time datetime={post.data.date.toISOString()}>
                    {post.data.date.toLocaleDateString('en-US', {
                      year: 'numeric',
                      month: 'long',
                      day: 'numeric'
                    })}
                  </time>
                  {post.data.categories && post.data.categories.length > 0 && (
                    <div class="flex items-center space-x-2">
                      <span>in</span>
                      {post.data.categories.map(category => (
                        <a 
                          href={`/categories/${category}`}
                          class="bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-200 px-2 py-1 rounded text-xs font-medium hover:bg-blue-200 dark:hover:bg-blue-800 transition-colors duration-200"
                        >
                          {category}
                        </a>
                      ))}
                    </div>
                  )}
                </div>
              </div>
            </div>
            
            {post.data.excerpt && (
              <p class="text-gray-600 dark:text-gray-300 mb-4 leading-relaxed">
                {post.data.excerpt}
              </p>
            )}

            <div class="flex items-center justify-between">
              <div class="flex flex-wrap gap-2">
                {post.data.tags?.map(postTag => (
                  <a 
                    href={`/tags/${postTag}`}
                    class={`px-2 py-1 rounded text-xs font-medium transition-colors duration-200 ${
                      postTag === tag 
                        ? 'bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-200' 
                        : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'
                    }`}
                  >
                    #{postTag}
                  </a>
                ))}
              </div>
              <a 
                href={`/posts/${post.slug}`}
                class="text-blue-600 dark:text-blue-400 hover:text-blue-800 dark:hover:text-blue-300 font-medium text-sm transition-colors duration-200"
              >
                Read more ‚Üí
              </a>
            </div>
          </article>
        ))}
      </div>
    ) : (
      <div class="text-center py-12">
        <div class="text-6xl mb-4">üìù</div>
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">
          No posts found
        </h2>
        <p class="text-gray-600 dark:text-gray-300 mb-8">
          There are currently no posts tagged with "{tag}".
        </p>
        <a 
          href="/tags"
          class="inline-flex items-center px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-lg transition-colors duration-200"
        >
          ‚Üê Back to all tags
        </a>
      </div>
    )}

    <div class="flex justify-center pt-8">
      <a 
        href="/tags"
        class="inline-flex items-center px-4 py-2 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-300 font-medium rounded-lg transition-colors duration-200"
      >
        ‚Üê View all tags
      </a>
    </div>
  </div>
</PageLayout>
